services:
  frontend:
    image: node:18
    container_name: frontend_dev
    working_dir: /app
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - CHOKIDAR_USEPOLLING=true
    tty: true
    stdin_open: true
    env_file:
      - .env
    command: ["node", "start.js"]
    mem_limit: 2g
    memswap_limit: 2g
    mem_reservation: 1g

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: backend_app
    ports:
      - "8080:8080"
    depends_on:
      - db
    networks:
      - app-network
    volumes:
      - ./backend:/app
      - /app/build
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      FLYWAY_ENABLED: ${FLYWAY_ENABLED}
    mem_limit: 2g
    memswap_limit: 2g
    mem_reservation: 1g

  db:
    image: postgres:15
    container_name: db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network
    mem_limit: 2g
    memswap_limit: 2g
    mem_reservation: 1g

volumes:
  pgdata:
    driver: local

networks:
  app-network:
    driver: bridge